{"version":3,"sources":["Layout/Footer.js","Layout/Header.js","Components/CardGrid/Card.js","Components/CardGrid/CardGrid.js","Components/ScoreBoard/ScoreBoard.js","Layout/Main.js","AppWrapper.js","App.js","index.js"],"names":["FooterWrapper","styled","div","FooterText","span","Footer","href","HeaderWrapper","HeaderText","h1","Header","CardWrapper","CardImg","img","CardTitle","Card","imageURL","name","onCardClick","clikedList","GameOver","onClick","undefined","find","val","src","CardGridWrapper","CardGrid","characterList","gameOver","CardList","map","item","idx","imageUrl","ScoreBoardWrapper","CurrentScore","HighScore","ScoreBoard","currentScore","useState","highScore","setHighScore","MainWrapper","getRandomCharacters","url","fetch","then","Response","json","jsonRes","array","randomIndex","currentIndex","length","Math","floor","random","randomizeArray","data","results","thumbnail","path","extension","Main","herosList","setHerosList","clickedHeros","setClickedHeros","useEffect","console","log","items","alert","App","AppWrapper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a30e8f1b.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\n//styled components\nconst FooterWrapper = styled.div`\n   display: flex;\n   justify-content: center;\n   margin: 25px 0;\n   background-color: white;\n   padding: 20px;\n`;\n\nconst FooterText = styled.span``;\nconst Footer = () => {\n   return (\n      <FooterWrapper>\n         <FooterText>\n            Made By <a href=\"https://www.github.com/c19h3r\">github/@C19h3r</a>\n         </FooterText>\n      </FooterWrapper>\n   );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n//styled Components\nconst HeaderWrapper = styled.div`\n   display: flex;\n   justify-content: center;\n   background-color: rebeccapurple;\n`;\nconst HeaderText = styled.h1`\n   color: white;\n`;\n\nconst Header = () => {\n   return (\n      <HeaderWrapper>\n         <HeaderText>SpiderMan Memory Game</HeaderText>\n      </HeaderWrapper>\n   );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CardWrapper = styled.div`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: space-around;\n   background-color: white;\n   height: 200px;\n   padding: 10px;\n   gap: 5px;\n   width: 175px;\n`;\nconst CardImg = styled.img`\n   width: 150px;\n`;\nconst CardTitle = styled.span``;\n\nconst Card = ({ imageURL, name, onCardClick, clikedList = [], GameOver }) => {\n   return (\n      <CardWrapper\n         onClick={() => {\n            if (clikedList.find((val) => val === name) === undefined) {\n               onCardClick([...clikedList, name]);\n            } else {\n               GameOver();\n            }\n         }}\n      >\n         <CardImg src={imageURL} />\n         <CardTitle>{name}</CardTitle>\n      </CardWrapper>\n   );\n};\n\nexport default Card;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"./Card\";\n\nconst CardGridWrapper = styled.div`\n   display: grid;\n   grid-template-columns: repeat(5, 1fr);\n   row-gap: 50px;\n   column-gap: 50px;\n`;\n\nfunction CardGrid({ characterList, onCardClick, clikedList, gameOver }) {\n   const CardList = characterList.map((item, idx) => {\n      return (\n         <Card\n            key={idx}\n            name={item.name}\n            imageURL={item.imageUrl}\n            onCardClick={onCardClick}\n            clikedList={clikedList}\n            GameOver={gameOver}\n         />\n      );\n   });\n\n   return <CardGridWrapper>{CardList}</CardGridWrapper>;\n}\n\nexport default CardGrid;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst ScoreBoardWrapper = styled.div`\n   display: flex;\n   justify-content: center;\n   gap: 25px;\n`;\nconst CurrentScore = styled.span`\n   font-size: 22px;\n`;\nconst HighScore = styled.span`\n   font-size: 22px;\n`;\n\nfunction ScoreBoard({ currentScore }) {\n   const [highScore, setHighScore] = useState(0);\n   if (currentScore > highScore) {\n      setHighScore(currentScore);\n   }\n   return (\n      <ScoreBoardWrapper>\n         <CurrentScore>Current Score - {currentScore}</CurrentScore>\n         <HighScore>High Score - {highScore}</HighScore>\n      </ScoreBoardWrapper>\n   );\n}\n\nexport default ScoreBoard;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\n//components\nimport CardGrid from \"../Components/CardGrid/CardGrid\";\nimport ScoreBoard from \"../Components/ScoreBoard/ScoreBoard\";\n\nconst MainWrapper = styled.div`\n   display: flex;\n   flex-direction: column;\n   justify-content: flex-start;\n   align-items: center;\n   height: 70vh;\n   width: 100%;\n   gap: 100px;\n`;\n\nconst randomizeArray = (array) => {\n   let currentIndex = array.length,\n      randomIndex;\n\n   while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n         array[randomIndex],\n         array[currentIndex],\n      ];\n   }\n   return array;\n};\n\nconst getRandomCharacters = () => {\n   var API_KEY = \"0e78af5390efc1526acbf78f2b0941cf\";\n\n   var url = `https://gateway.marvel.com:443/v1/public/characters?offset=1239&limit=10&apikey=${API_KEY}`;\n   return fetch(url)\n      .then((Response) => Response.json())\n      .then((jsonRes) => {\n         const { data } = jsonRes;\n         const requiredResult = data.results.map((item, idx) => {\n            return {\n               name: item.name,\n               imageUrl: `${item.thumbnail.path}/standard_xlarge.${item.thumbnail.extension}`,\n            };\n         });\n         return randomizeArray(requiredResult);\n      });\n};\n\nconst Main = () => {\n   const [herosList, setHerosList] = useState([]);\n   const [clickedHeros, setClickedHeros] = useState([]);\n   const gameOver = () => {\n      setClickedHeros([]);\n      alert(\"you clicked that hero again\");\n   };\n   useEffect(() => {\n      console.log(clickedHeros);\n      getRandomCharacters().then((items) => {\n         setHerosList(items);\n      });\n   }, [clickedHeros]);\n   return (\n      <MainWrapper>\n         <ScoreBoard currentScore={clickedHeros.length} />\n         <CardGrid\n            characterList={herosList}\n            onCardClick={setClickedHeros}\n            clikedList={clickedHeros}\n            gameOver={gameOver}\n         />\n      </MainWrapper>\n   );\n};\n\nexport default Main;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n   background-color: gray;\n   display: flex;\n   flex-direction: column;\n   height: 100vh;\n   justify-content: space-between;\n`;\n","import React from \"react\";\n//components\nimport Footer from \"./Layout/Footer\";\nimport Header from \"./Layout/Header\";\nimport Main from \"./Layout/Main\";\n//App Wrapper and styles\nimport AppWrapper from \"./AppWrapper\";\nimport \"./assets/style.css\";\n\nfunction App() {\n   return (\n      <AppWrapper>\n         <Header />\n         <Main />\n         <Footer />\n      </AppWrapper>\n   );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}